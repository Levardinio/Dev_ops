name: Webapp Build and Push

on:
  push:
    branches:
      - main
    paths:
      - 'webapp/**'
      - 'infra/**'
      - '.github/workflows/webapp-build-and-push.yml'

permissions:
  packages: write
  id-token: write
  contents: write

jobs:
    build:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v5

        - name: Login to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Cache Docker layers
          uses: actions/cache@v4
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-buildx-

        - name: downcase REPO
          run: |
            echo "REPO=${GITHUB_ACTOR,,}" >>${GITHUB_ENV}

        - name: Build and push Docker image
          uses: docker/build-push-action@v6
          with:
            context: webapp
            file: webapp/Dockerfile
            push: true
            tags: |
              ghcr.io/${{ env.REPO }}/flask-webapp:latest
              ghcr.io/${{ env.REPO }}/flask-webapp:${{ github.run_number }}

    deploy:
      needs: build
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Login to Azure
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
            terraform_version: 1.11.4

      - name: downcase REPO
        run: |
          echo "REPO=${GITHUB_ACTOR,,}" >>${GITHUB_ENV}

      - name: Terraform Init
        run: |
          cd infra
          terraform init -input=false -backend-config="key=${{ env.REPO }}-terraform.tfstate"

      - name: Terraform Validate
        run: |
          cd infra
          terraform validate

      - name: Terraform Apply
        env:
          TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_name_prefix: ${{ env.REPO }}
          TF_VAR_docker_image: ghcr.io/${{ env.REPO }}/flask-webapp:${{ github.run_number }}
        run: |
          cd infra
          terraform apply -auto-approve -input=false